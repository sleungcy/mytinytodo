# Default values for mytinytodo
# This is a YAML-formatted file.

replicaCount: 1

image:
  repository: mytinytodo
  pullPolicy: IfNotPresent
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 33  # www-data group

securityContext:
  runAsNonRoot: true
  runAsUser: 33  # www-data user
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false
  allowPrivilegeEscalation: false

service:
  type: ClusterIP
  port: 80
  targetPort: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: mytinytodo.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: mytinytodo-tls
  #    hosts:
  #      - mytinytodo.local

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# Application configuration
config:
  # Database configuration
  database:
    type: postgres
    host: ""  # Will use PostgreSQL service name if empty
    port: 5432
    name: mytinytodo
    user: mytinytodo
    password: ""  # Will be generated if empty
    prefix: mtt_
  
  # Application settings
  app:
    salt: ""  # Will be generated if empty
    debug: false
    disableExtensions: false
    apiUsePathInfo: false

# PostgreSQL configuration (using Leverages PostgreSQL chart)
postgresql:
  enabled: true

  postgresql: {}
  #   # Official PostgreSQL Docker image
  #   image:
  #     repository: postgres
  #     tag: "16"
  #     pullPolicy: IfNotPresent
    
  #   # Database credentials
  #   auth:
  #     # PostgreSQL super user
  #     username: postgres
  #     # Use existing secret or create new one
  #     existingSecret: ""
  #     # Password for PostgreSQL super user (ignored if existingSecret is provided)
  #     password: "changeme"
  #     # Name of database to create
  #     database: "postgres"

  #   # PostgreSQL configuration parameters
  #   config:
  #     # PostgreSQL port
  #     port: 5432
  #     # Max connections
  #     maxConnections: 100
  #     # Shared buffers
  #     sharedBuffers: "128MB"
  #     # Effective cache size
  #     effectiveCacheSize: "256MB"

  # # Local deployment configuration (StatefulSet)
  # local:
  #   # Number of replicas
  #   replicaCount: 1
    
  #   # Resource limits and requests
  #   resources:
  #     limits:
  #       cpu: 500m
  #       memory: 512Mi
  #     requests:
  #       cpu: 250m
  #       memory: 256Mi
    
  #   # Storage configuration for local deployment
  #   persistence:
  #     enabled: true
  #     size: 8Gi
  #     storageClass: ""
  #     accessMode: ReadWriteOnce

  #   # Service configuration for local deployment
  #   service:
  #     type: ClusterIP
  #     port: 5432

  # # Cloud deployment configuration (Deployment with PV/PVC)
  # cloud:
  #   # Number of replicas
  #   replicaCount: 1
    
  #   # Resource limits and requests
  #   resources:
  #     limits:
  #       cpu: 1000m
  #       memory: 1Gi
  #     requests:
  #       cpu: 500m
  #       memory: 512Mi
    
  #   # Persistent Volume configuration
  #   persistence:
  #     enabled: true
  #     size: 20Gi
  #     storageClass: ""
  #     accessMode: ReadWriteOnce
  #     # Persistent Volume configuration
  #     persistentVolume:
  #       enabled: true
  #       capacity: 20Gi
  #       accessMode: ReadWriteOnce
  #       storageClass: ""
  #       hostPath: ""  # For hostPath type PV
        
  #   # Service configuration for cloud deployment
  #   service:
  #     type: LoadBalancer
  #     port: 5432
  #     # LoadBalancer specific configuration
  #     loadBalancerIP: ""
  #     loadBalancerSourceRanges: []

  # # Security context
  # securityContext:
  #   runAsUser: 999
  #   runAsGroup: 999
  #   fsGroup: 999

  # # Node selector
  # nodeSelector: {}

  # # Tolerations
  # tolerations: []

  # # Affinity
  # affinity: {}

# External PostgreSQL configuration (when postgresql.enabled = false)
externalDatabase:
  host: ""
  port: 5432
  username: mytinytodo
  password: ""
  database: mytinytodo
  existingSecret: ""
  existingSecretPasswordKey: "postgresql-password"

# Persistent Volume for application data (logs, uploads, etc.)
persistence:
  enabled: false
  accessMode: ReadWriteOnce
  size: 1Gi
  storageClass: ""

# Health checks
healthcheck:
  enabled: true
  path: /
  initialDelaySeconds: 30
  periodSeconds: 10
  timeoutSeconds: 5
  failureThreshold: 3